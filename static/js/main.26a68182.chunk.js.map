{"version":3,"sources":["components/Input.js","components/Chart/Chart.js","components/NewExpense/NewExpense.js","components/Budget/Budget.js","components/Navbar.js","components/ExpensesList.js","components/Login/Login.js","components/Signup/Signup.js","components/Profile.js","App.js","reportWebVitals.js","index.js"],"names":["Input","Chart","allData","svgRef","useRef","data","useState","chart","setChart","allExpenses","map","category","expenses","sumOfAllExpenses","i","length","useEffect","setTimeout","svg","d3","current","attr","match","item","Number","parseInt","viewBoxWidth","viewBoxHeight","margin","top","right","bottom","left","width","height","radius","Math","min","group","append","groupDefault","pie","sort","padAngle","value","d","arc","innerRadius","outerRadius","groupsArcs","selectAll","enter","color","strokeWidth","centroid","x","y","html","categoryName","round","style","select","transition","ease","delay","duration","on","document","querySelectorAll","forEach","path","getTotalLength","setAttribute","console","log","className","ref","viewBox","NewExpense","props","setCategory","expense","setExpense","dot","alignItems","display","backgroundColor","borderRadius","content","marginRight","colourStyles","control","styles","option","isDisabled","isFocused","isSelected","chroma","undefined","alpha","css","contrast","cursor","input","placeholder","singleValue","options","label","onChange","e","onSubmit","preventDefault","db","getDatabase","integer","set","userId","id","type","name","target","Budget","setUserId","starCountRef","onValue","snapshot","val","setTarget","home","setHome","setFood","food","setShopping","shopping","setUtilities","utilities","setHousehold","household","setTransportation","transportation","setOther","other","updateTarget","setUpdateTarget","auth","getAuth","navigate","useNavigate","onAuthStateChanged","user","uid","categoryTotal","onClick","update","allCategoriesTarget","setSubmit","income","Navbar","pp","setPp","profileName","setProfileName","currentUser","photoURL","displayName","to","alt","src","ExpensesList","updateTest","Login","email","setEmail","password","setPassword","wrongEmail","setWrongEmail","provider","GoogleAuthProvider","createUserWithEmailAndPassword","then","userCredential","catch","error","code","message","firebase","EmailAuthProvider","PROVIDER_ID","signInWithEmailAndPassword","signInWithPopup","result","credentialFromResult","accessToken","customData","credentialFromError","process","Signup","Profile","setName","signOut","localStorage","clear","App","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","setData","setLength","list","push","array","total","filter","filteredCategory","exact","element","parentCallback","childData","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.26a68182.chunk.js","sourcesContent":["function Input(props) {\n  const handleChange = (e) => {\n    props.setExpense(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setSubmit('next');\n  };\n  return (\n    <din>\n      <form className=\"input\" onSubmit={handleSubmit}>\n        <input type=\"number\" placeholder=\"New Expense\" name=\"expense\" id=\"expense\" value={props.expense} onChange={handleChange} />\n        <button type=\"submit\">Next</button>\n      </form>\n    </din>\n  );\n}\n\nexport default Input;","import './Chart.css';\nimport React, { useState, useEffect, useRef } from 'react';\nimport * as d3 from 'd3';\n\nfunction Chart(allData) {\n  const svgRef = useRef(null);\n\n  const data = allData.allData;\n  const [chart, setChart] = useState(false);\n\n  const allExpenses = data.map((category) => category.expenses);\n\n  let sumOfAllExpenses = 0;\n\n  for (let i = 0; i < allExpenses.length; i++) {\n    sumOfAllExpenses += allExpenses[i];\n  }\n\n  useEffect(() => {\n    setTimeout(() => {\n      setChart(true);\n    }, 1000);\n\n    if (chart == true) {\n      // retrieve the svg in which to plot the viz\n      const svg = d3.select(svgRef.current);\n\n      // identify the dimensions of the viewBox to establish the svg canvas\n      const viewBox = svg.attr('viewBox');\n\n      const regexViewBox = /\\d+ \\d+ (\\d+) (\\d+)/;\n      // ! .match() returns string values\n      const [, viewBoxWidth, viewBoxHeight] = viewBox\n        .match(regexViewBox)\n        .map((item) => Number.parseInt(item, 10));\n      // with the margin convention include a group element translated within the svg canvas\n      const margin = {\n        top: 20,\n        right: 10,\n        bottom: 20,\n        left: 10,\n      };\n      // compute the width and height of the actual viz from the viewBox dimensions and considering the margins\n      // this to later work with width and height attributes directly through the width and height variables\n      const width = viewBoxWidth - (margin.left + margin.right);\n      const height = viewBoxHeight - (margin.top + margin.bottom);\n\n      // compute the radius as half the minor size between the width and height\n      const radius = Math.min(width, height) / 2;\n      // initialize a variable to have the multiple elements share the same stroke-width property\n      const strokeWidth = 10;\n\n      const group = svg\n        .append('g')\n        .attr('transform', `translate(${margin.left} ${margin.top})`);\n\n      // DEFAULT CIRCLE\n      // circle used as a background for the colored donut chart\n      // add a group to center the circle in the canvas (this to rotate the circle from the center)\n      const groupDefault = group\n        .append('g')\n        .attr('transform', `translate(${width / 2} ${height / 2})`);\n\n      // append the circle showing only the stroke\n      groupDefault\n        .append('circle')\n        .attr('cx', 0)\n        .attr('cy', 0)\n        .attr('r', radius)\n        .attr('transform', 'rotate(-90)')\n        .attr('fill', 'none')\n        .attr('stroke', 'hsla(0, 0%, 0%, 0.08')\n        .attr('stroke-width', strokeWidth)\n        .attr('stroke-linecap', 'round')\n        // hide the stroke of the circle using the radius\n        // this to compute the circumference of the shape\n        .attr('stroke-dasharray', radius * 3.14 * 2)\n        .attr('stroke-dashoffset', radius * 3.14 * 2);\n\n      // COLORED CIRCLES\n      // pie function to compute the arcs\n      const pie = d3\n        .pie()\n        .sort(null)\n        .padAngle(0.12)\n        // use either the value or the percentage in the dataset\n        .value((d) => d.expenses);\n\n      // arc function to create the d attributes for the path elements\n      const arc = d3\n        .arc()\n        // have the arc overlaid on top of the stroke of the circle\n        .innerRadius(radius)\n        .outerRadius(radius);\n\n      /* for each data point include the following structure\n    g             // wrapping all arcs\n      g           // wrapping each arc\n        arc       // actual shape\n        line      // connecting line\n        text      // text label\n      g\n        arc\n        ...\n    */\n      // wrapping group, horizontally centered\n      const groupArcs = group\n        .append('g')\n        .attr('transform', `translate(${width / 2} ${height / 2})`);\n\n      const groupsArcs = groupArcs\n        .selectAll('g')\n        .data(pie(data))\n        .enter()\n        .append('g');\n\n      // include the arcs specifying the stroke with the same width of the circle element\n      groupsArcs\n        .append('path')\n        .attr('d', arc)\n        .attr('fill', 'none')\n        .attr('stroke', (d) => d.data.color)\n        .attr('stroke-width', strokeWidth * 1)\n        .attr('stroke-linecap', 'round')\n        .attr('stroke-linejoin', 'round')\n        // hide the segments by applying a stroke-dasharray/stroke-dashoffset equal to the circle circumference\n        // ! the length of the element varies, and it considered afterwords\n        // for certain the paths are less than the circumference of the entire circle\n        .attr('stroke-dasharray', radius * 3.14 * 2)\n        .attr('stroke-dashoffset', radius * 3.14 * 2);\n\n      // include line elements visually connecting the text labels with the arcs\n      groupsArcs\n        .append('line')\n        .attr('x1', 0)\n        .attr('x2', (d) => {\n          const [x] = arc.centroid(d);\n          return x > 0 ? '25' : '-25';\n        })\n        .attr('y1', 0)\n        .attr('y2', 0)\n        .attr('stroke', ({ data: d }) => d.color)\n        .attr('stroke-width', 3)\n        .attr('transform', (d) => {\n          const [x, y] = arc.centroid(d);\n          const offset = x > 0 ? 20 : -20;\n          return `translate(${x + offset} ${y})`;\n        })\n        .attr('stroke-dasharray', 25)\n        .attr('stroke-dashoffset', 25);\n\n      // include text elements associated with the arcs\n      groupsArcs\n        .append('text')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('font-size', 15)\n        .attr('text-anchor', (d) => {\n          const [x] = arc.centroid(d);\n          return x > 0 ? 'start' : 'end';\n        })\n        .attr('transform', (d) => {\n          const [x, y] = arc.centroid(d);\n          const offset = x > 0 ? 50 : -50;\n          return `translate(${x + offset} ${y})`;\n        })\n        .html(\n          ({ data: d }) => `\n        <tspan x=\"0\" font-weight=\"bold\">${\n          d.categoryName\n        }:</tspan><tspan x=\"0\" dy=\"18\">${Math.round(\n            (d.expenses * 100) / sumOfAllExpenses\n          )}% / $${d.expenses}</tspan>\n      `\n        )\n        .style('opacity', 0)\n        .style('visibility', 'hidden');\n\n      // TRANSITIONS\n      // once the elements are set up\n      // draw the stroke of the larger circle element\n      groupDefault\n        .select('circle')\n        .transition()\n        .ease(d3.easeExp)\n        .delay(200)\n        .duration(2000)\n        .attr('stroke-dashoffset', '0')\n        // once the transition is complete\n        // draw the smaller strokes one after the other\n        .on('end', () => {\n          // immediately set the stroke-dasharray and stroke-dashoffset properties to match the length of the path elements\n          // using vanilla JavaScript\n          const paths = document.querySelectorAll('svg g g path');\n          paths.forEach((path) => {\n            const length = path.getTotalLength();\n            path.setAttribute('stroke-dasharray', length);\n            path.setAttribute('stroke-dashoffset', length);\n          });\n\n          const duration = 1000;\n          // transition the path elements to stroke-dashoffset 0\n          d3.selectAll('svg g g path')\n            .transition()\n            .ease(d3.easeLinear)\n            .delay((d, i) => i * duration)\n            .duration(duration)\n            .attr('stroke-dashoffset', 0);\n\n          // transition the line elements elements to stroke-dashoffset 0\n          d3.selectAll('svg g g line')\n            .transition()\n            .ease(d3.easeLinear)\n            .delay((d, i) => i * duration + duration / 2.5)\n            .duration(duration / 3)\n            .attr('stroke-dashoffset', 0);\n\n          // transition the text elements to opacity 1 and visibility visible\n          d3.selectAll('svg g g text')\n            .transition()\n            .ease(d3.easeLinear)\n            .delay((d, i) => i * duration + duration / 2)\n            .duration(duration / 2)\n            .style('opacity', 1)\n            .style('visibility', 'visible');\n        });\n    }\n  }, [svgRef.current, chart]);\n\n  console.log(svgRef.current);\n\n  return (\n    <div className=\"Chart\">\n      <svg className=\"chart-pie\" ref={svgRef} viewBox=\"-10 0 500 250\"></svg>\n    </div>\n  );\n}\n\nexport default Chart;\n","import React, { useState } from 'react';\nimport chroma from 'chroma-js';\nimport './NewExpense.css';\nimport CreatableSelect from 'react-select/creatable';\n\nimport { getDatabase, ref, set } from 'firebase/database';\n\nfunction NewExpense(props) {\n  const [category, setCategory] = useState('');\n  const [expense, setExpense] = useState('');\n\n  const handleChange = (e) => {\n    setExpense(e.target.value);\n  };\n\n  const handleCategory = (e) => {\n    setCategory(e.value);\n  };\n\n  const submitCategory = (e) => {\n    e.preventDefault();\n    const db = getDatabase();\n    var integer = parseInt(expense, 10);\n    set(ref(db, 'users/' + props.userId + `/${props.length}`), {\n      id: props.length,\n      category: category,\n      expense: integer,\n    });\n    setCategory('');\n    setExpense('');\n  };\n\n  const options = [\n    { value: 'home', label: 'Home', color: '#00B8D9' },\n    { value: 'food', label: 'Food', color: '#0989F8' },\n    { value: 'shopping', label: 'Shopping', color: '#F8BB00' },\n    { value: 'utilities', label: 'Utilities', color: '#FE8D00' },\n    { value: 'household', label: 'Household', color: '#A5A8F8' },\n    { value: 'transportation', label: 'Transportation', color: '#46D7A8' },\n    { value: 'other', label: 'Other', color: '#3ACB5F' },\n  ];\n\n  const dot = (color = 'transparent') => ({\n    alignItems: 'center',\n    display: 'flex',\n\n    ':before': {\n      backgroundColor: color,\n      borderRadius: 10,\n      content: '\" \"',\n      display: 'block',\n      marginRight: 8,\n      height: 10,\n      width: 10,\n    },\n  });\n\n  const colourStyles = {\n    control: (styles) => ({ ...styles, backgroundColor: 'white' }),\n    option: (styles, { data, isDisabled, isFocused, isSelected }) => {\n      const color = chroma(data.color);\n      console.log(data.color);\n      return {\n        ...styles,\n        backgroundColor: isDisabled\n          ? undefined\n          : isSelected\n          ? data.color\n          : isFocused\n          ? color.alpha(0.1).css()\n          : undefined,\n        color: isDisabled\n          ? '#ccc'\n          : isSelected\n          ? chroma.contrast(color, 'white') > 2\n            ? 'white'\n            : 'black'\n          : data.color,\n        cursor: isDisabled ? 'not-allowed' : 'default',\n\n        ':active': {\n          ...styles[':active'],\n          backgroundColor: !isDisabled\n            ? isSelected\n              ? data.color\n              : color.alpha(0.3).css()\n            : undefined,\n        },\n      };\n    },\n    input: (styles) => ({ ...styles, ...dot() }),\n    placeholder: (styles) => ({ ...styles, ...dot('#ccc') }),\n    singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\n  };\n\n  return (\n    <div className=\"NewExpense\">\n      <h2>Add a new expense</h2>\n      <span>Select a category</span>\n      <CreatableSelect\n        className=\"category-list\"\n        styles={colourStyles}\n        options={options}\n        onChange={handleCategory}\n      />\n      <form className=\"input\" onSubmit={submitCategory}>\n        <div className=\"amount\">\n          <span>Add amount</span>\n          <input\n            type=\"number\"\n            placeholder=\"$\"\n            name=\"expense\"\n            id=\"expense\"\n            value={expense}\n            onChange={handleChange}\n          />\n        </div>\n\n        <button type=\"submit\">Submit</button>\n      </form>\n    </div>\n  );\n}\n\nexport default NewExpense;\n","import React, { useState, useEffect } from 'react';\nimport Input from '../../components/Input';\nimport Chart from '../Chart/Chart';\nimport NewExpense from '../NewExpense/NewExpense';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './Budget.css';\n\nimport { getDatabase, ref, onValue, update } from 'firebase/database';\n\nfunction Budget(props) {\n  const [userId, setUserId] = useState();\n\n  useEffect(() => {\n    const db = getDatabase();\n    const starCountRef = ref(db, 'users/' + userId + '/target');\n    onValue(starCountRef, (snapshot) => {\n      const data = snapshot.val();\n      if (data == null) {\n        setTarget({ home: 0 });\n      } else {\n        setTarget(data);\n        setHome(data.home);\n        setFood(data.food);\n        setShopping(data.shopping);\n        setUtilities(data.utilities);\n        setHousehold(data.household);\n        setTransportation(data.transportation);\n        setOther(data.other);\n      }\n    });\n  }, [userId]);\n\n  const [target, setTarget] = useState('');\n  const [home, setHome] = useState('0');\n  const [food, setFood] = useState('0');\n  const [shopping, setShopping] = useState('0');\n  const [utilities, setUtilities] = useState('0');\n  const [household, setHousehold] = useState('0');\n  const [transportation, setTransportation] = useState('0');\n  const [other, setOther] = useState('0');\n\n  const [updateTarget, setUpdateTarget] = useState(false);\n\n  const auth = getAuth();\n\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        const uid = user.uid;\n        setUserId(uid);\n      } else {\n        navigate('/login');\n      }\n    });\n  });\n\n  function allCategoriesTarget() {\n    setUpdateTarget(!updateTarget);\n    const db = getDatabase();\n    if (updateTarget) {\n      update(ref(db, 'users/' + userId + '/target'), {\n        home: home,\n        food: food,\n        shopping: shopping,\n        utilities: utilities,\n        household: household,\n        transportation: transportation,\n        other: other,\n      });\n    }\n  }\n\n  const allData = [\n    {\n      categoryName: 'Home',\n      category: home,\n      expenses: props.categoryTotal('home'),\n      target: home,\n      updateTarget: setHome,\n      color: '#00B8D9',\n    },\n    {\n      categoryName: 'Food',\n      category: food,\n      expenses: props.categoryTotal('food'),\n      target: target.food,\n      updateTarget: setFood,\n      color: '#0789F8',\n    },\n    {\n      categoryName: 'Shopping',\n      category: shopping,\n      expenses: props.categoryTotal('shopping'),\n      target: target.shopping,\n      updateTarget: setShopping,\n      color: '#F9BA00',\n    },\n    {\n      categoryName: 'Utilities',\n      category: utilities,\n      expenses: props.categoryTotal('utilities'),\n      target: target.utilities,\n      updateTarget: setUtilities,\n      color: '#FE8C00',\n    },\n    {\n      categoryName: 'Household',\n      category: household,\n      expenses: props.categoryTotal('household'),\n      target: target.household,\n      updateTarget: setHousehold,\n      color: '#A6A8F8',\n    },\n    {\n      categoryName: 'Transportation',\n      category: transportation,\n      expenses: props.categoryTotal('transportation'),\n      target: target.transportation,\n      updateTarget: setTransportation,\n      color: '#47D7A8',\n    },\n    {\n      categoryName: 'Other',\n      category: other,\n      expenses: props.categoryTotal('other'),\n      target: target.other,\n      updateTarget: setOther,\n      color: '#3BCB60',\n    },\n  ];\n\n  if (target) {\n    return (\n      <>\n        <div className=\"budget\">\n          <Chart allData={allData} />\n          <div className=\"test\">\n            <table className=\"expenses\">\n              <tr>\n                <th>Category</th>\n                <th>Expenses</th>\n                <th>Target</th>\n              </tr>\n              {allData.map((item) => (\n                <>\n                  <tr>\n                    <td>{item.categoryName}</td>\n                    <td>\n                      <span>$</span>\n                      {item.expenses}\n                    </td>\n                    <td>\n                      {!updateTarget ? (\n                        <div className=\"edit\">\n                          <p className=\"\">\n                            <span>$</span>\n                            {item.target == undefined ? '0' : item.target}\n                          </p>\n                        </div>\n                      ) : (\n                        <div>\n                          <input\n                            type=\"number\"\n                            onChange={(e) => item.updateTarget(e.target.value)}\n                            value={\n                              item.category\n                                ? item.category\n                                : item.updateTarget('0')\n                            }\n                          />\n                        </div>\n                      )}\n                    </td>\n                  </tr>\n                </>\n              ))}\n              <tr>\n                <td></td>\n                <td></td>\n                <td>\n                  <button\n                    className=\"update_button\"\n                    onClick={() => allCategoriesTarget()}\n                  >\n                    {!updateTarget ? 'update' : 'done'}\n                  </button>\n                </td>\n              </tr>\n            </table>\n          </div>\n          <NewExpense\n            setExpense={props.setExpense}\n            setSubmit={props.setSubmit}\n            income={props.income}\n            expense={props.expense}\n            userId={userId}\n            length={props.length}\n          />\n        </div>\n      </>\n    );\n  } else {\n    return <p>loading</p>;\n  }\n}\n\nexport default Budget;\n","import { useEffect, useState } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './nav.css';\n\nconst Navbar = function (props) {\n  const [pp, setPp] = useState();\n  const [profileName, setProfileName] = useState('');\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        if (user.photoURL === null) {\n          if (user.displayName === null) {\n            setProfileName('hello');\n          } else {\n            setProfileName(user.displayName[0]);\n          }\n        } else {\n          setPp(user.photoURL);\n        }\n      } else {\n        navigate('/login');\n      }\n    });\n  }, [user]);\n\n  return (\n    <div className=\"nav\">\n      <Link to=\"/\">\n        <h3>LoveDinero</h3>\n      </Link>\n      <Link to=\"/profile\">\n        {profileName !== '' ? (\n          <div className=\"profile_name\">\n            <p>{profileName}</p>\n          </div>\n        ) : (\n          <img className=\"pp\" alt=\"profile_picture\" src={pp} />\n        )}\n      </Link>\n    </div>\n  );\n};\n\nexport default Navbar;\n","import React, { useState, useEffect } from 'react'\nimport Navbar from './Navbar';\nimport { getDatabase, ref, set, update } from \"firebase/database\";\nimport '../App.css'\nimport { getAuth, onAuthStateChanged } from \"firebase/auth\";\nimport { useNavigate } from 'react-router-dom';\n\nfunction ExpensesList(props) {\n\n  const [userId, setUserId] = useState()\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const navigate = useNavigate();\n\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setUserId(user.uid)\n      } else {\n        navigate('/login')\n\n      }\n    });\n  }, [user]);\n\n  function updateTest() {\n    const db = getDatabase();\n    update(ref(db, 'users/' + userId + '/1'), {\n      expense: 50\n    })\n    console.log(db)\n  }\n\n  return (\n    <div>\n      <Navbar />\n      <div className=\"expenses_list_card\">\n        <h3>Expenses list</h3>\n        <table className=\"expenses_list_table\">\n          {props.data.map(item => (\n            <tr>\n              <td className=\"expenses_list_category\">{item.category}</td>\n              <td className=\"expenses_list_expense\">{item.expense}</td>\n              <td><button onClick={() => updateTest()} >Update</button><button>Delete</button></td>\n            </tr>\n          ))}\n        </table>\n      </div>\n    </div>\n  )\n}\n\nexport default ExpensesList;","import { useState, useEffect } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebaseui/dist/firebaseui.css';\nimport 'firebase/compat/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport './Login.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\n\nconst Login = function () {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [wrongEmail, setWrongEmail] = useState(false);\n\n  const auth = getAuth();\n\n  const navigate = useNavigate();\n  const provider = new GoogleAuthProvider();\n\n  const emailSubmit = (e) => {\n    e.preventDefault();\n    signInWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        navigate('/');\n        const user = user.currentUser;\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        setWrongEmail(true);\n      });\n  };\n\n  createUserWithEmailAndPassword(auth, email, password)\n    .then((userCredential) => {\n      // Signed in\n      const user = userCredential.user;\n      // ...\n    })\n    .catch((error) => {\n      const errorCode = error.code;\n      const errorMessage = error.message;\n      // ..\n    });\n\n  const googleLogin = (e) => {\n    signInWithPopup(auth, provider)\n      .then((result) => {\n        // This gives you a Google Access Token. You can use it to access the Google API.\n        const credential = GoogleAuthProvider.credentialFromResult(result);\n        const token = credential.accessToken;\n        // The signed-in user info.\n        const user = result.user;\n        navigate('/');\n        // ...\n      })\n      .catch((error) => {\n        // Handle Errors here.\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // The email of the user's account used.\n        const email = error.customData.email;\n        // The AuthCredential type that was used.\n        const credential = GoogleAuthProvider.credentialFromError(error);\n        // ...\n      });\n  };\n\n  const uiConfig = {\n    // Popup signin flow rather than redirect flow.\n    signInFlow: 'popup',\n    // Redirect to /signedIn after sign in is successful. Alternatively you can provide a callbacks.signInSuccess function.\n    signInSuccessUrl: '/budget-calculator',\n    // We will display Google and Facebook as auth providers.\n    signInOptions: [\n      firebase.auth.EmailAuthProvider.PROVIDER_ID,\n      firebase.auth.GoogleAuthProvider.PROVIDER_ID,\n    ],\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  const demoLogin = (e) => {\n    setEmail('demo@demo.com');\n    setPassword(process.env.REACT_APP_DEMO_PASSWORD);\n  };\n\n  <StyledFirebaseAuth uiConfig={uiConfig} firebaseAuth={firebase.auth()} />;\n\n  return (\n    <div className=\"Login\">\n      <div className=\"login-image\"></div>\n      <div className=\"login-auth\">\n        <div className=\"love-dinero\">\n          <span>Love</span>\n          <span>Dinero</span>\n        </div>\n\n        <div className=\"email-login\">\n          <p>Welcome back,</p>\n          <h2>Login to your account</h2>\n          <div className=\"wrong-email\">\n            {wrongEmail ? (\n              <span>Please re-enter you email and password.</span>\n            ) : (\n              ''\n            )}\n          </div>\n\n          <form onSubmit={emailSubmit}>\n            <p>Email</p>\n            <input\n              placeholder=\"you@email.com\"\n              value={email}\n              type=\"email\"\n              onChange={handleEmail}\n            />\n            <p>Password</p>\n            <input\n              placeholder=\"password\"\n              value={password}\n              type=\"password\"\n              onChange={handlePassword}\n            />\n            <button className=\"login-btn\">Submit</button>\n            <a onClick={googleLogin} className=\"google\">\n              Or sign-in with google\n            </a>\n            <button onClick={demoLogin} className=\"demo\">\n              Or try a demo\n            </button>\n          </form>\n        </div>\n\n        <p>\n          Don't have an account? <Link to=\"/signup\">Join free today</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import { useState, useEffect } from 'react';\nimport firebase from 'firebase/compat/app';\nimport 'firebaseui/dist/firebaseui.css';\nimport 'firebase/compat/auth';\nimport StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth';\nimport './Signup.css';\nimport { useNavigate, Link } from 'react-router-dom';\nimport {\n  getAuth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  onAuthStateChanged,\n  GoogleAuthProvider,\n  signInWithPopup,\n} from 'firebase/auth';\n\nconst Signup = function () {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [wrongEmail, setWrongEmail] = useState(false);\n\n  const auth = getAuth();\n\n  const navigate = useNavigate();\n  const provider = new GoogleAuthProvider();\n\n  const createAccount = (e) => {\n    e.preventDefault();\n    createUserWithEmailAndPassword(auth, email, password)\n      .then((userCredential) => {\n        // Signed in\n        navigate('/');\n        const user = user.currentUser;\n      })\n      .catch((error) => {\n        const errorCode = error.code;\n        const errorMessage = error.message;\n        // ..\n      });\n  };\n\n  const handleEmail = (e) => {\n    setEmail(e.target.value);\n  };\n\n  const handlePassword = (e) => {\n    setPassword(e.target.value);\n  };\n\n  console.log(email);\n\n  return (\n    <div className=\"Login\">\n      <div className=\"login-image\"></div>\n      <div className=\"login-auth\">\n        <div className=\"love-dinero\">\n          <span>Love</span>\n          <span>Dinero</span>\n        </div>\n\n        <div className=\"email-login\">\n          <p>Hey there,</p>\n          <h2>Create a free account</h2>\n\n          <form onSubmit={createAccount}>\n            <p>Email</p>\n            <input\n              placeholder=\"you@email.com\"\n              value={email}\n              type=\"email\"\n              onChange={handleEmail}\n            />\n            <p>Password</p>\n            <input\n              placeholder=\"password\"\n              value={password}\n              type=\"password\"\n              onChange={handlePassword}\n            />\n            <button className=\"login-btn\">Create</button>\n          </form>\n        </div>\n        <p>\n          Already have an account? <Link to=\"/login\">Log in here</Link>\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Signup;\n","import React, { useState, useEffect } from 'react';\nimport { getAuth, onAuthStateChanged } from 'firebase/auth';\nimport { useNavigate, Link } from 'react-router-dom';\nimport './nav.css';\n\nconst Profile = function (props) {\n  const [email, setEmail] = useState();\n  const [pp, setPp] = useState();\n  const [name, setName] = useState();\n\n  const logout = () => {\n    auth.signOut().then(() => {});\n    localStorage.clear();\n  };\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n  const navigate = useNavigate();\n\n  useEffect(() => {\n    onAuthStateChanged(auth, (user) => {\n      if (user) {\n        setEmail(user.email);\n        setPp(user.photoURL);\n        setName(user.displayName);\n      } else {\n        navigate('/login');\n      }\n    });\n  }, [user]);\n\n  return (\n    <div className=\"profile\">\n      <div className=\"profile_card\">\n        <div>\n          <img className=\"\" alt=\"profile_picture\" src={pp} />\n          <h2>Hello {name}</h2>\n          <h2>Email: {email}</h2>\n          <Link className=\"expenses_list\" to=\"/expenses\">\n            <button>Expenses List</button>\n          </Link>\n          <button onClick={logout}>Log Out</button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default Profile;\n","import React, { useState, useEffect } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport Budget from './components/Budget/Budget';\nimport ExpensesList from './components/ExpensesList';\nimport Login from './components/Login/Login';\nimport Signup from './components/Signup/Signup';\nimport firebase from 'firebase/compat/app';\nimport Profile from './components/Profile';\nimport Navbar from './components/Navbar';\nimport { getAuth } from 'firebase/auth';\nimport './App.css';\n\nimport { Routes, Route, HashRouter } from 'react-router-dom';\n\nimport { getDatabase, ref, onValue } from 'firebase/database';\n\nconst App = function () {\n  const firebaseConfig = {\n    apiKey: process.env.REACT_APP_API_KEY,\n    authDomain: 'budget-d9651.firebaseapp.com',\n    databaseURL: 'https://budget-d9651-default-rtdb.firebaseio.com',\n    projectId: 'budget-d9651',\n    storageBucket: 'budget-d9651.appspot.com',\n    messagingSenderId: process.env.REACT_APP_SENDER_ID,\n    appId: process.env.REACT_APP_APP_ID,\n  };\n  firebase.initializeApp(firebaseConfig);\n\n  const [expense, setExpense] = useState('');\n\n  const auth = getAuth();\n  const user = auth.currentUser;\n\n  const [pp, setPp] = useState();\n\n  const [data, setData] = useState();\n  const [userId, setUserId] = useState();\n  const [length, setLength] = useState();\n\n  useEffect(() => {\n    if (user) {\n      setUserId(user.uid);\n    }\n  }, [user]);\n\n  useEffect(() => {\n    const db = getDatabase();\n    const starCountRef = ref(db, 'users/' + userId);\n    onValue(starCountRef, (snapshot) => {\n      const data = snapshot.val();\n      const list = [];\n      for (let id in data) {\n        list.push(data[id]);\n      }\n      setData(list);\n      setLength(list.length + 1);\n    });\n  }, [userId]);\n\n  // Expenses Total\n  const array = data ? data.map((item) => item.expense) : '';\n  let total = 0;\n\n  for (let i = 0; i < array.length; i++) {\n    total += array[i];\n  }\n\n  // Categories total\n  function filter(category) {\n    let filteredCategory = data\n      ? data.filter((item) => item.category === category)\n      : '';\n    const result = filteredCategory\n      ? filteredCategory.map((item) => item.expense)\n      : '';\n\n    return result;\n  }\n\n  function categoryTotal(category) {\n    let total = 0;\n\n    for (let i = 0; i < filter(category).length; i++) {\n      total += filter(category)[i];\n    }\n\n    return total;\n  }\n\n  const handleCallback = (childData) => {\n    setPp(childData);\n  };\n\n  return (\n    <HashRouter>\n      <div className=\"App\">\n        <Navbar />\n        <Routes>\n          <Route\n            exact\n            path=\"/\"\n            element={\n              <Budget\n                total={total}\n                setExpense={setExpense}\n                expense={expense}\n                categoryTotal={categoryTotal}\n                parentCallback={handleCallback}\n                pp={pp}\n                data={data}\n                userId={userId}\n                length={length}\n              />\n            }\n          />\n          <Route\n            exact\n            path=\"/expenses\"\n            element={<ExpensesList data={data} userId={userId} />}\n          />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/signup\" element={<Signup />} />\n          <Route path=\"/profile\" element={<Profile pp={pp} total={total} />} />\n        </Routes>\n      </div>\n    </HashRouter>\n  );\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}