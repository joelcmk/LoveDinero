{"version":3,"sources":["components/Input.js","components/Budget.js","components/ExpensesList.js","App.js","reportWebVitals.js","index.js"],"names":["Input","props","className","onSubmit","e","preventDefault","setSubmit","type","placeholder","name","id","value","expense","onChange","setExpense","target","Budget","useState","home","setHome","food","setFood","shopping","setShopping","utilities","setUtilities","household","setHousehold","transportation","setTransportation","other","setOther","homeEdit","setHomeEdit","foodEdit","setFoodEdit","shoppingEdit","setShoppingEdit","utilitiesEdit","setUtilitiesEdit","householdEdit","setHouseholdEdit","transportationEdit","setTransportationEdit","otherEdit","setOtherEdit","income","categoryTotal","onClick","to","ExpensesList","data","map","item","category","App","submit","setCategory","setData","array","total","i","length","filter","exact","path","element","parseInt","options","label","isClearable","console","log","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f97476f0.chunk.js","sourcesContent":["function Input(props) {\n  const handleChange = (e) => {\n    props.setExpense(e.target.value);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    props.setSubmit('next');\n  };\n  return (\n    <din>\n      <form className=\"input\" onSubmit={handleSubmit}>\n        <input type=\"number\" placeholder=\"New Expense\" name=\"expense\" id=\"expense\" value={props.expense} onChange={handleChange} />\n        <button type=\"submit\">Next</button>\n      </form>\n      {/*\n        <form className=\"input\" onSubmit={handleIncome}>\n          <input type=\"number\" placeholder=\"Add Income\" name=\"income\" id=\"income\" value={props.income} onChange={hanldeIncomeChange} />\n          <button type=\"submit\">Submit</button>\n        </form>\n      */}\n    </din>\n  );\n}\n\nexport default Input;","import React, { useState } from 'react';\nimport Input from '../components/Input';\nimport '../App.css';\n\nimport { Link } from 'react-router-dom';\n\nfunction Budget(props) {\n\n  const [home, setHome] = useState('300');\n  const [food, setFood] = useState('300');\n  const [shopping, setShopping] = useState('300');\n  const [utilities, setUtilities] = useState('300');\n  const [household, setHousehold] = useState('300');\n  const [transportation, setTransportation] = useState('300');\n  const [other, setOther] = useState('300');\n\n  const [homeEdit, setHomeEdit] = useState(true);\n  const [foodEdit, setFoodEdit] = useState(true);\n  const [shoppingEdit, setShoppingEdit] = useState(true);\n  const [utilitiesEdit, setUtilitiesEdit] = useState(true);\n  const [householdEdit, setHouseholdEdit] = useState(true);\n  const [transportationEdit, setTransportationEdit] = useState(true);\n  const [otherEdit, setOtherEdit] = useState(true);\n\n\n\n  return (\n    <div>\n      <Input setExpense={props.setExpense} setSubmit={props.setSubmit} income={props.income} expense={props.expense} />\n      <div className=\"budget\">\n        <div className=\"test\">\n          <table className=\"expenses\">\n            <tr>\n              <th>Category</th>\n              <th>Expenses</th>\n              <th>Target</th>\n            </tr>\n            <tr>\n              <td>Home</td>\n              <td><span>$</span>{props.categoryTotal('home')}</td>\n              <td>{\n                homeEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{home}</p>\n                    <button onClick={() => setHomeEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <div>\n                    <input type=\"number\" onChange={(e) => setHome(e.target.value)} />\n                    <button onClick={() => setHomeEdit(true)}>Submit</button>\n                  </div>\n              }</td>\n            </tr>\n            <tr>\n              <td>Food</td>\n              <td><span>$</span>{props.categoryTotal('food')}</td>\n              <td className=\"test2\">{\n                foodEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{food}</p>\n                    <button onClick={() => setFoodEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setFood(e.target.value)} />\n                    <button onClick={() => setFoodEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n            <tr>\n              <td>Shopping</td>\n              <td><span>$</span>{props.categoryTotal('shopping')}</td>\n              <td>{\n                shoppingEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{shopping}</p>\n                    <button onClick={() => setShoppingEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setShopping(e.target.value)} />\n                    <button onClick={() => setShoppingEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n            <tr>\n              <td>Utilities</td>\n              <td><span>$</span>{props.categoryTotal('utilities')}</td>\n              <td>{\n                utilitiesEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{utilities}</p>\n                    <button onClick={() => setUtilitiesEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setUtilities(e.target.value)} />\n                    <button onClick={() => setUtilitiesEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n            <tr>\n              <td>Household</td>\n              <td><span>$</span>{props.categoryTotal('household')}</td>\n              <td>{\n                householdEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{household}</p>\n                    <button onClick={() => setHouseholdEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setHousehold(e.target.value)} />\n                    <button onClick={() => setHouseholdEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n            <tr>\n              <td>Transportation</td>\n              <td><span>$</span>{props.categoryTotal('transportation')}</td>\n              <td>{\n                transportationEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{transportation}</p>\n                    <button onClick={() => setTransportationEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setTransportation(e.target.value)} />\n                    <button onClick={() => setTransportationEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n            <tr>\n              <td>Other</td>\n              <td><span>$</span>{props.categoryTotal('other')}</td>\n              <td>{\n                otherEdit ?\n                  <div className=\"edit\">\n                    <p className=\"test1\"><span>$</span>{other}</p>\n                    <button onClick={() => setOtherEdit(false)} type=\"submit\">edit</button>\n                  </div>\n                  : <form>\n                    <input type=\"number\" onChange={(e) => setOther(e.target.value)} />\n                    <button onClick={() => setOtherEdit(true)}>Submit</button>\n                  </form>\n              }</td>\n            </tr>\n          </table>\n        </div>\n      </div>\n      <Link className=\"expenses_list\" to=\"/expenses\"><button>Expenses List</button></Link>\n    </div >\n  );\n}\n\nexport default Budget;","import { Link } from 'react-router-dom'\n\nfunction ExpensesList(props) {\n\n  return (\n    <div>\n      <h3>Expenses list</h3>\n      <Link className=\"\" to=\"/\"><button>Home</button></Link>\n      {props.data.map(item => (\n        <li>\n          {item.category} | {item.expense}\n        </li>\n      ))}\n    </div>\n  )\n}\n\nexport default ExpensesList;","import React, { useState } from 'react';\nimport CreatableSelect from 'react-select/creatable';\nimport Budget from './components/Budget';\nimport ExpensesList from './components/ExpensesList';\nimport './App.css';\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route,\n} from \"react-router-dom\";\n\nconst App = function () {\n\n  const [expense, setExpense] = useState('');\n  const [submit, setSubmit] = useState('');\n  const [category, setCategory] = useState('');\n\n  const options = [\n    { value: 'home', label: 'Home' },\n    { value: 'food', label: 'Food' },\n    { value: 'shopping', label: 'Shopping' },\n    { value: 'utilities', label: 'Utilities' },\n    { value: 'household', label: 'Household' },\n    { value: 'transportation', label: 'Transportation' },\n    { value: 'other', label: 'Other' }\n  ]\n\n  const [data, setData] = useState([\n    { expense: 13, category: 'home' },\n    { expense: 56, category: 'home' },\n    { expense: 87, category: 'shopping' }\n  ]);\n\n  const handleCategory = (e) => {\n    setCategory(e.value)\n    console.log(e.value)\n  };\n\n  const submitCategory = (e) => {\n    e.preventDefault()\n    setData([\n      ...data,\n      { expense: parseInt(expense), category: category }\n    ]);\n    setSubmit('');\n  }\n\n  // Expenses Total\n  const array = data.map(item => (\n    item.expense\n  ));\n  let total = 0;\n\n  for (let i = 0; i < array.length; i++) {\n    total += array[i];\n  }\n\n  // Categories total\n  function filter(category) {\n\n    let filteredCategory = data.filter(item => item.category === category);\n    const result = filteredCategory.map(item => (\n      item.expense\n    ));\n\n    return result\n  }\n\n  function categoryTotal(category) {\n    let total = 0;\n\n    for (let i = 0; i < filter(category).length; i++) {\n      total += filter(category)[i];\n    };\n\n    return total;\n  }\n\n  if (submit === '') {\n    return (\n      <Router>\n        <div className=\"App\">\n          <Routes>\n            <Route exact path=\"/\" element={\n              <Budget total={total}\n                setExpense={setExpense} setSubmit={setSubmit} expense={expense}\n                categoryTotal={categoryTotal}\n              />\n            } />\n            <Route exact path=\"/expenses\" element={\n              <ExpensesList data={data} />\n            } />\n          </Routes>\n        </div>\n      </Router >\n    );\n  }\n\n  if (submit === 'next') {\n    return (\n      <div>\n        <form onSubmit={submitCategory} className=\"App\">\n          <CreatableSelect\n            options={options}\n            isClearable\n            onChange={handleCategory}\n          />\n          <button type=\"submit\">Submit</button>\n        </form>\n      </div>\n    );\n  }\n};\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({\n      getCLS, getFID, getFCP, getLCP, getTTFB,\n    }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  // eslint-disable-next-line react/jsx-filename-extension\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}